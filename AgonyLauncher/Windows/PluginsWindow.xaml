<Window x:Class="AgonyLauncher.Windows.PluginsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Closing="Window_Closing"
        Title="Plugins" Height="450" Width="750" WindowStartupLocation="CenterScreen" MinWidth="650" MinHeight="300" Background="#FF333333">
    <Window.Resources>
        <ResourceDictionary >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/ExpressionDark.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Button x:Name="ButtonNewPlugin" Margin="5" Content="New Plugin" Click="ButtonNewPlugin_Click"/>
            </Grid>
            <Grid Grid.Row="1">
                <DataGrid
                    x:Name="PluginsGrid"
                    ItemsSource="{Binding}"
                    IsSynchronizedWithCurrentItem="True"
                    GridLinesVisibility="Vertical"
                    CanUserAddRows="False"
                    HeadersVisibility="Column"
                    CanUserReorderColumns="True"
                    CanUserResizeColumns="False"
                    CanUserSortColumns="False" 
                    AutoGenerateColumns="False"
                    CanUserResizeRows="False" 
                    HorizontalContentAlignment="Left"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                >
                    <!-- SelectionChanged="AccountGridSelectionChanged"
                    MouseDoubleClick="AccountGridMouseDoubleClick"  -->
                    <DataGrid.Columns>
                        <DataGridTemplateColumn  Header="Enabled" MinWidth="55">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!-- Bindings get destroyed once user changes the value of the checkbox so I'll have to use callbacks -->
                                    <CheckBox
                                        Tag="{Binding}"
                                        x:Name="PluginEnabledCheckBox"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        IsChecked="{Binding IsActive}"
                                        Checked="PluginEnabledCheckBoxChecked"
                                        Unchecked="PluginEnabledCheckBoxUnchecked"
                                    />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding AssemblyName}" Header="Name" Width="100*" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Author}" Header="Author" Width="100*" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Type}" Header="Type" Width="100" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Location}" Header="Location" Width="100*" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Version}" Header="Version" Width="100" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Status}" Header="Status" Width="100" IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                            <EventSetter Event="ContextMenuOpening"  Handler="DataGridRowContextMenuOpening"/>
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu x:Name="RowContextMenu">
                                        <MenuItem  x:Name="EnableMenu" Header="Enable" Tag="{Binding}">
                                            <!-- Visibility="{Binding Converter={StaticResource SkipTaskMenuVisibityConverter}}"> -->
                                            <!-- Workaround for a bug. -->
                                            <MenuItem.Style>
                                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <EventSetter Event="Click" Handler="EnableMenu_Click"/>
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem  x:Name="DisableMenu" Header="Disable" Tag="{Binding}">
                                            <!-- Visibility="{Binding Converter={StaticResource SkipTaskMenuVisibityConverter}}"> -->
                                            <!-- Workaround for a bug. -->
                                            <MenuItem.Style>
                                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <EventSetter Event="Click" Handler="DisableMenu_Click"/>
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                        <MenuItem  x:Name="OpenLocationMenu" Header="Open Location" Tag="{Binding}">
                                            <MenuItem.Style>
                                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <EventSetter Event="Click" Handler="OpenLocationMenu_Click"/>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </Grid>
            <Grid Grid.Row="2">
                <Grid Margin="5 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="ButtonEnableAll" Margin="5" Grid.Column="0" Content="Enable" Click="ButtonEnableAll_Click"/>
                    <Button x:Name="ButtonDisableAll" Margin="5" Grid.Column="1" Content="Disable" Click="ButtonDisableAll_Click"/>
                    <Button x:Name="ButtonSettings" Margin="5" Grid.Column="3" Content="Settings" Click="ButtonSettings_Click"/>
                    <Button x:Name="ButtonUpdate" Margin="5" Grid.Column="4" Content="Update" Click="ButtonUpdate_Click"/>
                    <Button x:Name="ButtonRecomile" Margin="5" Grid.Column="5" Content="Recompile" Click="ButtonRecomile_Click"/>
                    <Button x:Name="ButtonUninstall" Margin="5" Grid.Column="6" Content="Uninstall" Click="ButtonUninstall_Click"/>
                </Grid>
            </Grid>
        </Grid>
    </DockPanel>
</Window>